[{"content":"一、内网网盘 进入https://ctf.nefu.edu.cn/netdisk,flag在文件here_is_what_you_want.txt中。\nflag{This_our_netdisk!}\n二、签个到叭 flag就在题目中\nnsilab{we1c0me_To_NSILAB!}\n三、!从这里开始! 进入https://harry0597.com/2022/08/24/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/,flag在最下面\nflag{The_world_of_cryptography}\n四、what_is_nc ( 请先看我 ) 打开容器，在linux系统中打开终端使用nc连接容器的ip和端口，即可获得flag\nflag{d6d1a9e7-fce3-456c-896b-b66d851b7930}\n五、什么是ssh？ 在Linux终端中用ssh连接容器，输入密码ctf，链接容器后输入ls，发现flag\nflag{06ae16da-1136-44c6-b5fa-22989e5e2fc9}\n六、前端？什么是前端 打开容器，进入网页，查看页面源代码，发现flag\nflag{YOU_R34lly_kNOw_1ron77TtTTT7t7tT7TTTTtTt7TT7}\n七、网络安全实验室欢迎你 打开容器，进入网页http://contest.ctf.nefu.edu.cn:33552/?%E7%BD%91[%E5%AE%89][%E5%AE%9E][%E9%AA%8C][%E5%AE%A4][%E6%AC%A2][%E8%BF%8E][%E4%BD%A0]=/flag, 发现flag\nnsilab{hello_b62bc53a8725}\n八、RSA-00 flag就在题目中\nnsilab{学好RSA，走遍天下都不怕}\n九、RSA入门-01 flag就在题目中，为nsilab{R!S!A!来喽!}\n十、New Hacker-0 打开容器，进入网页，先输入ls，在出现的三个文件中未发现flag，输入\nls /\n查找根目录，发现flag，输入cat /flag，得到flag\nflag{c80a3061-1976-4fc0-af01-95d7e882662a}\n十一、招新文档 打开容器，进入网页，通过开发者工具切换到网络面板，刷新网页，寻找http响应头，发现源站通过 Cloudflare 平台部署，使用nginx服务器软件，从而得到flag\nflag{cloudflare_nginx}\n十二、哈基米 刚开始毫无头绪，只能将其复制到浏览器中搜索，找到知乎一个人写的哈基码网站为https://zhuanlan.zhihu.com/p/1946752526117475410,利用其工具将其解码，发现其为base64编码，将其解码后得到flag\nflag{h4ch1mi_HacH1mI_h4C1M1n4m3ruD0}\n十三、爱 国 与十二类似，上网找社会主义核心价值观编码器，对其解码得到flag\nnsilab{中华人民万岁}\n十四、罗马的一个皇帝 根据题目想到是凯撒密码，一个一个试，发现偏移16位，找到flag\nnsilab{hello caesar}\n十五 基 一道base64编码题，对其进行解码，得到flag\nnsilab{this_your_gift_cyberchef.org}\n十六、md5 这个不太会，问了豆包，让用md5哈希碰撞，使用linux发送 curl \u0026quot;http://contest.ctf.nefu.edu.cn:33628/?a[]=1\u0026amp;b[]=2\u0026quot; -d \u0026quot;c[]=5\u0026amp;d[]=6\u0026quot; 得到flag\nflag{mds_MDs_mdS_md5_mdS_mDsS55SSsSSS5SS5sss5SsSss5}\n十七、哈基米_0 进入网页，打开开发者工具，打开control.js，发现是异或解密，将其解密后得到flag\nNSILAB{Y0u_RevErSed_The_f1rSt_H@}\n十八 点击即送 下载附件，我当时没下逆向工具，用录屏得到flag\nnsilab{flag_looks_like_this}\n十九、Fence 到浏览器搜索，发现是栅栏密码，假设栏数位2，将其解密后得到flag\nnsilab{flag_looks_like_this}\n二十、Fence2 直接枚举，暴力破解，得到flag\nnsilab{D0_u_5ee_1ast_f1ag?}\n二十一、RSA-01 以下为豆包结论：\n解题的核心步骤如下:\n计算模数 n：n = p * q\n计算欧拉函数 φ(n)：对于两个不同的素数 p 和 q，φ(n) = (p-1) * (q-1)\n计算私钥 d：d 是 e 的模逆元，即 d = e⁻¹ mod φ(n)。这意味着 (e * d) % φ(n) = 1。\n解密密文 c：明文 m = cᵈ mod n\n将明文转换为字符串：将得到的整数 m 转换回字节，即可得到 flag\n我得到：\nflag = nsilab{Hello_RSA}\n代码为 `from Crypto.Util.number import long_to_bytes\np = 173959611786153317706301267932417363937 q = 247839891815273718588039400253940099247 c = 9238164112105252409917439007600050016039975407551321496401161303034206220059 e = 65537 n = p * q phi_n = (p - 1) * (q - 1) d = pow(e, -1, phi_n) m = pow(c, d, n) flag = long_to_bytes(m) print(f\u0026quot;n = {n}\u0026quot;) print(f\u0026quot;phi(n) = {phi_n}\u0026quot;) print(f\u0026quot;d = {d}\u0026quot;) print(f\u0026quot;m (as integer) = {m}\u0026quot;) print(f\u0026quot;flag = {flag.decode('utf-8')}\u0026quot;)` 二十二、ez_param 通过linux发送curl -X POST -d \u0026quot;b=CTF\u0026quot; -b \u0026quot;c=2023\u0026quot; \u0026quot;contest.ctf.nefu.edu.cn:33647?a=NEFU\u0026quot;，得到flag\nflag{51d436e3-115d-4850-b3ae-6562a46373ab}\n二十三、点击即送的时代一去不复返了！ 用IDA Pro反编译一下就出来了\nflag{this_Is_a_EaSyRe}\n二十四、New Hacker-1 尝试十的过程失败后，尝试运行init.sh，怀疑flag在环境变量中，输入env，发现flag在环境变量中\nflag{51d436e3-115d-4850-b3ae-6562a46373ab}\n二十五、ezPyJail_0 用nc连接，发现让查找环境变量，输入__import__('os').environ，得到flag\nnsilab{65abf532-7eaa-4b68-a5e5-15e97e53a3ed}\n二十六、ezPyJail_1 用nc连接，发现让查找环境变量，但是有输入限制，输入eval(input())，跳出限制，再输入__import__('os').environ，得到flag\nnsilab{e195e279-e3c3-455d-871f-3e08f077ee23}\n二十七、ezPyJail_2 用nc连接，直接输入flag，得到flag\nnsilab{7088410e-3ed1-4cc4-840c-d970e14d38c3}\n二十八、ezPyJail_3 相比于前几题限制增多，上网查找到一个writeuphttps://www.woodwhale.cn/hnctfj-ail-all-in-one/#week2-calc-jail-beginner-level4-1-jail,发现包括前几题在内的解决办法，该题输入open((bytes([102])+bytes([108])+bytes([97])+bytes([103])).decode()).read()，得到flag\nnsilab{092c7236-b626-4f52-927e-67ddcb1f14da}\n二十九、mediumPyJail_B 与二十八一样，方法都在writeup中，但是多了一个找到key的过程，输入 f\u0026quot;{xorer.key}\u0026quot;,得到key为23，flag为[121, 100, 126, 123, 118, 117, 108, 35, 46, 39, 35, 46, 36, 37, 113, 58, 113, 46, 37, 33, 58, 35, 34, 38, 37, 58, 117, 37, 38, 37, 58, 47, 116, 117, 46, 37, 37, 37, 116, 39, 116, 32, 34, 106]，将其转化为十六进制，再进行xor解密，得到flag\nnsilab{4904932f-f926-4512-b212-8cb9222c0c75}\n三十、0-Ascanete_is_so_cute 仿照培训找到的flag\nflag{ae9d8955-1e13-40b2-99dc-5da4f10699f3}\n三十一、0-real_signup nc连上就出了flag\nflag{fdc1570e-e5f1-48a2-92e4-d1c0e8dc5176}\n三十二、0-signup 与三十一样的方法，nc连上，ls一下，发现有flag文件，输入cat flag，得到flag\nflag{fc20d550-6582-47f8-b0c9-8805c8ef8578}\n三十三、1-ez_pwn 同三十\nflag{3b454fdb-3de2-4730-881c-5b51e54350ad}\n三十四、0-ez_oi(迫真) 通过pwntools运行代码，得到flag\nflag{00d79482-2c41-4ba1-9ab4-aac99137b8e4}\n代码为 `#!/usr/bin/env python3 from pwn import * import math\ndef prime_factorization(x): factors = [] while x % 2 == 0: factors.append(2) x = x // 2 i = 3 while i * i \u0026lt;= x: while x % i == 0: factors.append(i) x = x // i i += 2 if x \u0026gt; 1: factors.append(x) return factors\nio = remote(\u0026lsquo;contest.ctf.nefu.edu.cn\u0026rsquo;, 33772)\nn\nn = int(io.recvline().decode().strip()) 字 numbers_line = io.recvline().decode().strip() numbers = list(map(int, numbers_line.split()))\nfor num in numbers: factors = prime_factorization(num) result = '*'.join(map(str, factors)) print(f\u0026quot;Sending: {result}\u0026quot;) io.sendline(result.encode()) print(\u0026quot;\\n--- Receiving final output from server ---\u0026quot;) while True: try: response = io.recvline(timeout=1).decode().strip() if response: print(response) else: break except EOFError: break io.close()` 三十五、1-what_is_32 与33题相同，但原以为32位系统a应该输入20+4，结果发现a应该输入20+8，后面同三十题，得到flag\nflag{19cca7a1-f6ec-4195-80dc-63a3eab4e316}\n三十六、1-神秘数字 这道题运用了补码的知识，-114514 的 32 位补码表示是 0xFFFFD6EE，这个二进制序列如果被解释为一个无符号整数，它的值就是 4294852782，所以输入4294852782即可得到flag\nflag{788109c7-ed1e-4fa4-9a0e-fb0ac66b99c5}\n三十七、不停的鹿 新生培训\nnsilab{IULUlU_IulU1uIuuUuuUUuUuuuUuuuUUuuUuUUuuuuUUUUUuuuuUuuUUuuuuuUUUuuUuUuuUUU}\n三十八、RSA入门-02 同上\nnsilab{8811544}\n三十九、RSA入门-03 同上\nnsilab{3604436468783450892188797727424315019700464485426289400510317953710604890993}\n代码为` p = 250267979330594551356981870969598325261 q = 333057179167141094941957875863444588587 e = 65537\nN = p * q phi_N = (p - 1) * (q - 1) d = pow(e, -1, phi_N) print(f\u0026quot;验证: (e * d) mod φ(N) = {(e * d) % phi_N}\u0026quot;) print(f\u0026quot;私钥 d 是: {d}\u0026quot;) print(f\u0026quot;nsilab{{{d}}}\u0026quot;) `\n四十、ez_LSB 同上\nnsilab{W0w_Y0u_know_LSB!}\n四十一、RSA-02-FactorMe 对n分解质因数，得到p和q，再计算phi_N=(p-1)(q-1)，最后计算d=e^(-1) mod phi_N，即可得到私钥d，最后得到m，再将m转为字符串即可得到flag\nnsilab{yafu!}\n四十二、【OSINT】一条河 通过百度识图定位是太原，再用百度地图找到具体位置\nnsilab{汾河_山西体育中心体育场}\n四十三、倒霉的Agiao-1 用Notepad打开附件，搜索user_name,找到flag\nflag{JusticeEnforcement-DeepMountains-nullSecurity-zhaowendao}\n#请先看我 WP模板 将flag拼接起来，得到flag\nNSILAB{Th1s_1s_@_Ex@mp1e_f1@g}\n","date":"2025-10-23T19:44:07+08:00","permalink":"https://fangyilin66.github.io/p/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1ctf%E6%96%B0%E6%89%8B%E8%B5%9B/","title":"我的第一次CTF新手赛"},{"content":"完成博客的第一篇 今天终于跟随莱特雷-letere的视频Hugo + Github免费搭建博客，并实现自动化部署完成了我的博客的搭建。\n在此多谢莱特雷-letere大佬！\n太棒了！\n","date":"2025-10-05T00:00:00Z","permalink":"https://fangyilin66.github.io/p/%E5%AE%8C%E6%88%90%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87/","title":"完成博客的第一篇"}]